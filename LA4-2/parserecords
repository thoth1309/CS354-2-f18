#!/bin/awk -f 

# Awk program to read CSV data and parse out relevant real estate records
# This particular program parses for single-family dwellings, saving the
# relevant data in HTML, preserving only date, subdivision name, lot,
# block, and value.

function parse() {

	#$6 ~ /^single family dwelling$/ {printf("\t<td>%s</td>\n", $i)} >> "parseData.html"

}

BEGIN {
	#getline file < "./BldgPrmtsPublic10-01-2017To10-15-2017.csv"
	print "<html>\n\n" > "parseData.html"
	print "<head>\n" >> "parseData.html"
	print "<title>Single Family Dwelling</title>\n" >> "parseData.html"
	print "</head>\n\n" >> "parseData.html"
	print "<body>\n" >> "parseData.html"
	print "<h1>Records</h1>\n\n" >> "parseData.html"
	print "<table cellspacing="20">\n" >> "parseData.html"
	print "<tr>\n" >> "parseData.html"
	print "\t<td>DATE</td>\n" >> "parseData.html"
	print "\t<td>SUBDIVISION</td>\n" >> "parseData.html"
	print "\t<td>LOT</td>\n" >> "parseData.html"
	print "\t<td>BLOCK</td>\n" >> "parseData.html"
	print "\t<td>VALUE</td>\n" >> "parseData.html"
	print "</tr>\n" >> "parseData.html"

	print "<tr>" >> "parseData.html"
#	parse()
	FPAT = "([^,]+)|(\"[^\"]+\")"
}

{

# 1-date, 5-subdivision, 6-lot, 7-block, 8-value, print based on 3


	for(i=1; i<=NF; i++) {

	}

#	for (i=1; i<= NF; i++) {
#		if($i == 1) {
#			printf() >> "parseData.html"
#		}
#		printf("\t<td>%s\t", $i) >> "parseData.html"
#	} 
#	print "</td>\n\n" >> "parseData.html"

}
{
	print "</tr>\n" >> "parseData.html"
	print "</table>\n\n" >> "parseData.html"
	print "</body>\n" >> "parseData.html"
	print "</html>" >> "parseData.html"
}
