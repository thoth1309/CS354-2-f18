#!/bin/awk -f 

# Awk program to read CSV data and parse out relevant real estate records
# This particular program parses for single-family dwellings, saving the
# relevant data in HTML, preserving only date, subdivision name, lot,
# block, and value.

BEGIN {
	# Build the start of the HTML file
	print "<html>\n\n" 
	print "<head>\n" 
	print "<title>Single Family Dwelling</title>\n" 
	print "</head>\n\n" 
	print "<body>\n" 
	print "<h1>Single Family Dwellings</h1>\n\n" 
	print "<table style=\"width:100%\">\n" 
	print "<tr>\n" 
	print "\t<th align=\"left\">DATE</th>\n" 
	print "\t<th align=\"left\">SUBDIVISION</th>\n" 
	print "\t<th align=\"left\">LOT</th>\n" 
	print "\t<th align=\"left\">BLOCK</th>\n" 
	print "\t<th align=\"left\">VALUE</th>\n" 
	print "</tr>\n" 
#	print "<tr>" 

	# define divisions between cells
	FPAT = "([^,]+)|(\"[^\"]+\")"
}

{

# 1-date, 5-subdivision, 6-lot, 7-block, 8-value, print based on 3
	

	if(tolower($3) ~ /^single family dwelling/) {
		print "<tr>" 
		for(i=1; i<= NF; i++) {
			if(i==1) {
				printf("\t<td>%s</td>\n", $i) 
			}
			if(i==5) {
				printf("\t<td>%s</td>\n", $i) 
			}
			if(i==6) {
				printf("\t<td>%s</td>\n", $i) 
			}
			if(i==7) {
				printf("\t<td>%s</td>\n", $i) 
			}
			if(i==8) {
				printf("\t<td>%s</td>\n", $i) 
			}
		}	
		print "</tr>\n" 
	}
	

#	for (i=1; i<= NF; i++) {
#		if($i == 1) {
#			printf() 
#		}
#		printf("\t<td>%s\t", $i) 
#	} 
#	print "</td>\n\n" 

}
END {
#	print "</tr>\n" 
	print "</table>\n\n" 
	print "</body>\n" 
	print "</html>\n" 
}
